{
  "description": "IVR for Direct Agent extension and voicemail",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "event": "incomingMessage"
        },
        {
          "next": "gather_choose_route",
          "event": "incomingCall"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": 0,
          "y": -10
        }
      }
    },
    {
      "name": "SendCallToAgent",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 610,
          "y": 1930
        },
        "workflow": "WW",
        "channel": "TC",
        "attributes": "{ \"type\": \"directCall\", \"name\": \"Direct Call:{{trigger.call.From}}\",\"workerExtension\":\"{{widgets.gather_extension.Digits}}\",\"conversations\": {\n    \"media\": [\n      {\n        \"url\": \"https://api.twilio.com/2010-04-01/Accounts/{{widgets.call_recording_1.AccountSid}}/Recordings/{{widgets.call_recording_1.Sid}}\",\n        \"type\": \"VoiceRecording\",\n        \"start_time\": \"{{widgets.call_recording_1.StartTime}}\",\n        \"channels\": [ \"customer\", \"others\" ]\n      }\n    ]\n  } }"
      }
    },
    {
      "name": "gather_extension",
      "type": "gather-input-on-call",
      "transitions": [
        {
          "next": "checkExtension",
          "event": "keypress"
        },
        {
          "event": "speech"
        },
        {
          "next": "say_play_3",
          "event": "timeout"
        }
      ],
      "properties": {
        "number_of_digits": 4,
        "speech_timeout": "auto",
        "offset": {
          "x": 500,
          "y": 720
        },
        "loop": 1,
        "finish_on_key": "#",
        "say": "Please enter the 4 digit agent extension.",
        "stop_gather": true,
        "gather_language": "en",
        "profanity_filter": "true",
        "timeout": 10
      }
    },
    {
      "name": "gather_choose_route",
      "type": "gather-input-on-call",
      "transitions": [
        {
          "next": "directAgentCheck",
          "event": "keypress"
        },
        {
          "event": "speech"
        },
        {
          "next": "say_play_3",
          "event": "timeout"
        }
      ],
      "properties": {
        "number_of_digits": 1,
        "speech_timeout": "auto",
        "offset": {
          "x": 140,
          "y": 180
        },
        "loop": 1,
        "finish_on_key": "#",
        "say": "Hello, welcome to Twilio. To dial an agent extension directly, press 1. Otherwise, remain on the line and we ill connect you shortly.",
        "stop_gather": true,
        "gather_language": "en",
        "profanity_filter": "true",
        "timeout": 5
      }
    },
    {
      "name": "directAgentCheck",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "say_play_3",
          "event": "noMatch"
        },
        {
          "next": "gather_extension",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to 1",
              "arguments": [
                "{{widgets.gather_choose_route.Digits}}"
              ],
              "type": "equal_to",
              "value": "1"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.gather_choose_route.Digits}}",
        "offset": {
          "x": 400,
          "y": 450
        }
      }
    },
    {
      "name": "checkExtension",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "extensionValid",
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 510,
          "y": 990
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "parameters": [
          {
            "value": "{{widgets.gather_extension.Digits}}",
            "key": "extension"
          }
        ],
        "url": "https://yourserverlessdomain/checkExtension"
      }
    },
    {
      "name": "say_invalid_extension",
      "type": "say-play",
      "transitions": [
        {
          "next": "gather_extension",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "offset": {
          "x": 1120,
          "y": 810
        },
        "loop": 1,
        "say": "Sorry, that does not appear to be a valid extension."
      }
    },
    {
      "name": "say_connecting_direct",
      "type": "say-play",
      "transitions": [
        {
          "next": "SendCallToAgent",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "offset": {
          "x": 590,
          "y": 1700
        },
        "loop": 1,
        "say": "Thank you. Connecting you with the agent now."
      }
    },
    {
      "name": "SendToEveryone",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -80,
          "y": 1090
        },
        "workflow": "WW",
        "channel": "TC",
        "attributes": "{ \"type\": \"inbound\", \"name\": \"{{trigger.call.From}}\"}",
        "waitUrlMethod": "GET"
      }
    },
    {
      "name": "say_play_3",
      "type": "say-play",
      "transitions": [
        {
          "next": "SendToEveryone",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "offset": {
          "x": -80,
          "y": 860
        },
        "loop": 1,
        "say": "Connecting you with an agent now."
      }
    },
    {
      "name": "extensionValid",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "say_invalid_extension",
          "event": "noMatch"
        },
        {
          "next": "say_connecting_direct",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{widgets.checkExtension.parsed.result}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        },
        {
          "next": "say_invalid_extension",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to false",
              "arguments": [
                "{{widgets.checkExtension.parsed.result}}"
              ],
              "type": "equal_to",
              "value": "false"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.checkExtension.parsed.result}}",
        "offset": {
          "x": 490,
          "y": 1290
        }
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}